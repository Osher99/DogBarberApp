{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/helpers/AuthGuard.ts","webpack:///./src/app/helpers/AuthInterceptor.ts","webpack:///./src/app/home/appointments/appointments.component.css","webpack:///./src/app/home/appointments/appointments.component.html","webpack:///./src/app/home/appointments/appointments.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/newappointment/newappointment.component.css","webpack:///./src/app/home/newappointment/newappointment.component.html","webpack:///./src/app/home/newappointment/newappointment.component.ts","webpack:///./src/app/shared/appointment-service.service.ts","webpack:///./src/app/shared/user-service.service.ts","webpack:///./src/app/user/login/login.component.css","webpack:///./src/app/user/login/login.component.html","webpack:///./src/app/user/login/login.component.ts","webpack:///./src/app/user/register/register.component.css","webpack:///./src/app/user/register/register.component.html","webpack:///./src/app/user/register/register.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './helpers/AuthGuard';\nimport { AppointmentsComponent } from './home/appointments/appointments.component';\nimport { HomeComponent } from './home/home.component';\nimport { NewappointmentComponent } from './home/newappointment/newappointment.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { RegisterComponent } from './user/register/register.component';\nimport { UserComponent } from './user/user.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/user/login', pathMatch: 'full' },\n  { path: 'user', component: UserComponent,\nchildren: [\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent }\n]\n},\n{ path: 'home', component: HomeComponent, canActivate: [AuthGuard], children: [\n  { path: 'newappointment', component: NewappointmentComponent },\n  { path: 'appointments', component: AppointmentsComponent },\n//   { path: 'newproject', component: AddprojectComponent },\n//   { path: 'myprojects', component: MyprojectsComponent },\n//   { path: 'forbidden', component: ForbiddenComponent }\n// ] },\n// {path: '404', component: NotfoundComponent},\n {path: '**', redirectTo: '/home'}\n\n]}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'DogBarberApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { UserService } from './shared/user-service.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './user/user.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { RegisterComponent } from './user/register/register.component';\nimport { ToastrModule, ToastrService } from 'ngx-toastr';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './home/home.component';\nimport { NewappointmentComponent } from './home/newappointment/newappointment.component';\nimport { AppointmentService } from './shared/appointment-service.service';\nimport { AppointmentsComponent } from './home/appointments/appointments.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthInterceptor } from './helpers/AuthInterceptor';\nimport { MatTableModule } from '@angular/material/table';\n// import {TableModule} from 'primeng/table';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    NewappointmentComponent,\n    AppointmentsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    NgbModule,\n    MatTableModule,\n    ToastrModule.forRoot({\n      progressBar: true\n    }),\n    FormsModule\n  ],\n  providers: [\n    UserService, \n    AppointmentService, \n    ToastrService, \n    AppointmentService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { CanActivate } from '@angular/router/src/utils/preactivation';\r\nimport { UserService } from '../shared/user-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthGuard implements CanActivate {\r\n  path: ActivatedRouteSnapshot[];\r\n   route: ActivatedRouteSnapshot;\r\n\r\n   constructor(private router: Router, private userService: UserService) {}\r\n   canActivate(\r\n     next: ActivatedRouteSnapshot,\r\n     state: RouterStateSnapshot): boolean {\r\n       if (localStorage.getItem('token') != null) {\r\n         return true;\r\n       } else {\r\n         this.router.navigate(['/user/login']);\r\n         return false;\r\n       }\r\n     }\r\n}\r\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private router: Router) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (localStorage.getItem('token') != null) {\r\n            const clonedReq = req.clone({\r\n                headers: req.headers.set('Authorization', 'Bearer ' + localStorage.getItem('token'))\r\n        });\r\n            return next.handle(clonedReq).pipe(\r\n            tap(\r\n                success => { },\r\n                err => {\r\n                    if (err.status === 401) {\r\n                        localStorage.removeItem('token');\r\n                        this.router.navigateByUrl('/user/login');\r\n                    } else if (err.status === 403) {\r\n                        this.router.navigateByUrl('/forbidden');\r\n                    }\r\n                }\r\n            )\r\n        );\r\n        } else {\r\n            return next.handle(req.clone());\r\n        }\r\n    }\r\n}\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvYXBwb2ludG1lbnRzL2FwcG9pbnRtZW50cy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NgbCalendar, NgbDatepickerConfig, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { Appointment } from 'src/app/models/appointment';\nimport { User } from 'src/app/models/user';\nimport { AppointmentService } from 'src/app/shared/appointment-service.service';\nimport { UserService } from 'src/app/shared/user-service.service';\n\n@Component({\n  selector: 'app-appointments',\n  templateUrl: './appointments.component.html',\n  styleUrls: ['./appointments.component.css']\n})\nexport class AppointmentsComponent implements OnInit {\n\n  constructor(\n    private toastr: ToastrService, \n    private userService: UserService,\n    private calendar: NgbCalendar,\n    private appointmentService: AppointmentService,\n    private config: NgbDatepickerConfig\n    ) {\n      const current = new Date();\n      config.minDate = { year: current.getFullYear(), month: \n      current.getMonth() + 1, day: current.getDate() };\n        //config.maxDate = { year: 2099, month: 12, day: 31 };\n      config.outsideDays = 'hidden';\n     }\n \n    private userDetails: User;\n  private model: NgbDateStruct;\n  private date: any;\n  private appointmentList: Appointment[];\n\n  ngOnInit() {\n    this.appointmentService.getAllAppointments().subscribe((res: any) => {\n      if (res) {\n        this.appointmentList = [];\n        this.stringFormatDate(res);\n      }\n    });\n  }\n\n  stringFormatDate(list)  { \n    for (let i = 0; i<list.length; i++) {\n      list[i].AppointmentDate = new Date(list[i].AppointmentDate).toLocaleDateString();\n     this.appointmentList.push(list[i]);\n    }\n\n    \n     \n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark sticky-top\\\">\\n  <a class=\\\"navbar-brand text-white\\\" routerLink=\\\"/home\\\">Dog Barber App</a>\\n  <ul class=\\\"nav justify-content-center mr-auto\\\"> \\n    <li class=\\\"nav-item\\\"> \\n      <a class=\\\"nav-link\\\" routerLink=\\\"/home/newappointment\\\">Add Appointment</a>\\n    </li>\\n    <li class=\\\"nav-item\\\"> \\n    <a class=\\\"nav-link\\\" routerLink=\\\"/home/appointments\\\">Appointments</a>\\n  </li>\\n  </ul>\\n  <!-- <a class=\\\"navbar-brand text-white\\\"  *ngIf=\\\"!verified\\\">Email Not Confirmed</a> -->\\n  <a class=\\\"navbar-brand text-white\\\"  *ngIf=\\\"this.currentUser\\\">Welcome {{ this.currentUser.UserName }}  </a>\\n  <button class=\\\"btn btn-danger my-2 my-sm-0\\\" (click)=\\\"onLogout()\\\">Log out</button>\\n</nav>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '../models/user';\nimport { UserService } from '../shared/user-service.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  currentUser: User;\n\n  constructor(private router: Router, private userService: UserService) { }\n\n  ngOnInit() {\n   this.currentUser = this.userService.getCurrentUser();\n   console.log(this.currentUser);\n  }\n\n  onLogout() {\n    this.currentUser = null;\n    this.userService.removeCurrentUser();\n    this.router.navigate(['/user/login']);\n   }\n}","module.exports = \"\\r\\n\\r\\n.h2, h2 {\\r\\n    font-size: 2rem;\\r\\n    font-weight: bold;\\r\\n    font-style: oblique;\\r\\n    text-decoration: underline;\\r\\n}\\r\\n.btn-block { \\r\\n    width: auto!important;\\r\\n}\\r\\nbutton[type=submit].btn {\\r\\n    margin: 0px 155px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9uZXdhcHBvaW50bWVudC9uZXdhcHBvaW50bWVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsaUJBQWlCO0lBQ2pCLG1CQUFtQjtJQUNuQiwwQkFBMEI7QUFDOUI7QUFDQTtJQUNJLHFCQUFxQjtBQUN6QjtBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9uZXdhcHBvaW50bWVudC9uZXdhcHBvaW50bWVudC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG4uaDIsIGgyIHtcclxuICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgZm9udC1zdHlsZTogb2JsaXF1ZTtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG59XHJcbi5idG4tYmxvY2sgeyBcclxuICAgIHdpZHRoOiBhdXRvIWltcG9ydGFudDtcclxufVxyXG5cclxuYnV0dG9uW3R5cGU9c3VibWl0XS5idG4ge1xyXG4gICAgbWFyZ2luOiAwcHggMTU1cHg7XHJcbn0iXX0= */\"","module.exports = \"<br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\" style=\\\"justify-content: center;\\\">\\n    <h2>Set new Appointment:</h2>  \\n  </div>\\n  <hr>\\n    <div class=\\\"row\\\" style=\\\"justify-content: center\\\">\\n    <label style=\\\"color: black; font-weight: bold; text-align: center;\\\">First Name: {{this.userDetails.FirstName}}</label><br>\\n  </div>\\n  <form [formGroup]=\\\"appointmentService.formModel\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit()\\\">\\n      <div style=\\\"text-align: center\\\" class=\\\"form-group\\\">  \\n        <div class=\\\"row\\\" style=\\\"justify-content: center\\\">\\n          <label style=\\\" color: black; text-align: center;\\\">Appointment Date:</label> \\n        </div>   \\n        <ngb-datepicker #dp formControlName=\\\"AppointmentDate\\\" #date=\\\"ngbDatepicker\\\" required \\n        (ngModelChange)=\\\"onDateSelect(date)\\\" style=\\\"margin: 0px 20px 0px 25px;\\\"></ngb-datepicker>\\n<!-- <button class=\\\"btn btn-sm btn-outline-primary mr-2\\\" (click)=\\\"selectToday()\\\">Select Today</button> -->\\n      </div>\\n\\n      <div class=\\\"form-row\\\" style=\\\"justify-content: center\\\">\\n        <div  style=\\\"text-align: center\\\" class=\\\"form-group\\\">  \\n          <select class=\\\"custom-select\\\" formControlName=\\\"AppointmentHour\\\">\\n            <option value=\\\"\\\" disabled>Choose your hour</option>\\n            <option *ngFor=\\\"let hour of this.hourList\\\" [ngValue]=\\\"hour\\\">{{hour}}</option>\\n         </select>\\n        </div>\\n      </div>\\n      <hr/>\\n          <div class=\\\"form-row\\\" style=\\\"justify-content: center\\\">\\n            <div class=\\\"form-group col-md-8 offset-md-2\\\"> \\n              <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block\\\" [disabled]=\\\"!appointmentService.formModel.valid\\\">Add new Appointment</button>\\n            </div>\\n          </div>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgbCalendar, NgbDateStruct, NgbDatepickerConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { Appointment } from 'src/app/models/appointment';\nimport { User } from 'src/app/models/user';\nimport { AppointmentService } from 'src/app/shared/appointment-service.service';\nimport { UserService } from 'src/app/shared/user-service.service';\n\n@Component({\n  selector: 'app-newappointment',\n  templateUrl: './newappointment.component.html',\n  styleUrls: ['./newappointment.component.css']\n})\nexport class NewappointmentComponent implements OnInit {\n  constructor(\n    private toastr: ToastrService, \n    private userService: UserService,\n    private calendar: NgbCalendar,\n    private appointmentService: AppointmentService,\n    private config: NgbDatepickerConfig\n    ) {\n      const current = new Date();\n      config.minDate = { year: current.getFullYear(), month: \n      current.getMonth() + 1, day: current.getDate() };\n        //config.maxDate = { year: 2099, month: 12, day: 31 };\n      config.outsideDays = 'hidden';\n     }\n \n    private userDetails: User;\n  private model: NgbDateStruct;\n  private date: any;\n  private hourList: string[];\n  private appointmentList: Appointment[];\n\n  ngOnInit() {\n    this.appointmentService.formModel.reset();\n    this.userDetails = this.userService.getCurrentUser();\n    this.hourList = [\"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\"];\n    this.appointmentService.getAllAppointments().subscribe((res: any) => {\n      if (res) {\n        console.log(res);\n        this.appointmentList = res;\n        console.log(this.appointmentList);\n      }\n    });\n  }\n\n  onDateSelect(date){\n    debugger;\n    this.hourList = [\"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\"];\n    let appDate = new Date(\n      this.appointmentService.formModel.value.AppointmentDate.year, \n      this.appointmentService.formModel.value.AppointmentDate.month-1, \n      this.appointmentService.formModel.value.AppointmentDate.day\n      );\n      let dateString = appDate.toLocaleDateString();\n     \n      if (this.appointmentList.length > 0){\n    // let thisDateList = this.appointmentList.filter(x => new Date(x.appointmentDate).toLocaleDateString() == dateString);\n    let thisDateList = [];\n    for (let i = 0; i<this.appointmentList.length; i++){\n      if (new Date(this.appointmentList[i].AppointmentDate).toLocaleDateString() == dateString){\n        thisDateList.push(this.appointmentList[i]);\n      }\n    }\n\n    for (let i = 0; i<thisDateList.length; i++){\n      var index = this.hourList.indexOf(thisDateList[i].appointmentHour);\n      this.hourList.splice(index, 1);\n    }\n  }\n}\n  onSubmit() {\n\n    for (let i = 0; i<this.appointmentList.length; i++){\n      let appDate = new Date(\n        this.appointmentService.formModel.value.AppointmentDate.year, \n        this.appointmentService.formModel.value.AppointmentDate.month-1, \n        this.appointmentService.formModel.value.AppointmentDate.day\n        );\n\n      if (this.appointmentList[i].AppointmentDate == appDate &&\n        this.appointmentList[i].AppointmentHour == this.appointmentService.formModel.value.AppointmentHour) {\n          this.toastr.error('Another appointment already exists in this hour, please choose another hour', 'Date Error');\n          return;\n        }\n\n    }\n\n    \n    this.appointmentService.registerAppointment().subscribe(\n      (result: any) => {\n        if (result) {\n        this.toastr.success('New Appointment created at !' + (new Date(result.AppointmentDate).toLocaleDateString()) +\n         ' ' + result.AppointmentHour, 'Appointment Creation Process Successful');\n        this.appointmentService.formModel.reset();\n        } else {\n          this.appointmentService.formModel.reset();\n                  this.toastr.error('Appointment Creation Process failed!', 'Validation Error');\n            }\n          },\n      err => {\n        this.toastr.error(err.message, 'Server Error');\n        this.appointmentService.formModel.reset();\n        console.log(err);\n      });\n    }\n  }","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from './user-service.service';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppointmentService {\n\n  constructor(private fb: FormBuilder, private http: HttpClient, private userService: UserService) { }\n\n  readonly BaseURI = environment.apiEndpoint;\n\n  formModel = this.fb.group({\n    AppointmentDate: ['', Validators.required],\n    AppointmentHour: ['', Validators.required]\n  });\n\n  registerAppointment() {\n    let appDate = new Date(\n      this.formModel.value.AppointmentDate.year, \n      this.formModel.value.AppointmentDate.month, \n      this.formModel.value.AppointmentDate.day\n      );\n\n    const body = {\n      AppointmentDate: appDate,\n      AppointmentHour: this.formModel.value.AppointmentHour,\n        UserName: this.userService.getCurrentUser().UserName\n    };\n    console.log(body);\n    return this.http.post(this.BaseURI + '/Appointment/CreateAppointment', body);\n  }\n\n  removeAppointment(appointmentId: number) {\n    const body = {\n        Id: appointmentId\n    };\n    return this.http.post(this.BaseURI + '/Appointment/RemoveAppointment', body);\n  }\n\n  getAllAppointments() {\n    return this.http.get(this.BaseURI + '/Appointment/GetAppointments');\n  }\n\n  getUserAppointments(userName: string) {\n    let headersParams = new HttpHeaders().append('Content-Type', 'application/json');;\n    let paramsValues = new HttpParams().set(\"UserName\", userName);\n\n    return this.http.get(this.BaseURI + '/Appointment/GetAppointmentsForUser', { headers: headersParams, params: paramsValues });\n  }\n\n  getDateAppointments(date: Date) {\n    let headersParams = new HttpHeaders().append('Content-Type', 'application/json');;\n    let paramsValues = new HttpParams().set(\"Date\", date.toLocaleDateString());\n\n    return this.http.get(this.BaseURI + '/Appointment/GetAppointmentsByDay', { headers: headersParams, params: paramsValues });\n  }\n\n  changeDone(appointmentId: number) {\n    const body = {\n        Id: appointmentId\n    };\n    return this.http.post(this.BaseURI + '/Project/ChangeDone', body);\n}\n\n}","import { Injectable } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from '../models/user';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private fb: FormBuilder, private http: HttpClient) { }\n\n  public loggedUser = null;\n  readonly BaseURI = environment.apiEndpoint;\n\n  formModel = this.fb.group({\n    UserName: ['', Validators.required],\n    FirstName: ['', Validators.required],\n    Passwords: this.fb.group({\n      Password: ['', [Validators.required, Validators.minLength(4)]],\n      ConfirmPassword: ['', Validators.required],\n    }, {validator: this.comparePasswords })\n  });\n\n  formPasswordModel = this.fb.group({\n    CurrentPassword: ['', [Validators.required, Validators.minLength(4)]],\n    Passwords: this.fb.group({\n      Password: ['', [Validators.required, Validators.minLength(4)]],\n      ConfirmPassword: ['', Validators.required],\n    }, {validator: this.comparePasswords }),\n  });\n\n  comparePasswords(fb: FormGroup) {\n    const confirmPasswordsCtrl = fb.get('ConfirmPassword');\n\n    if (confirmPasswordsCtrl.errors == null || 'passwordMismatch' in confirmPasswordsCtrl.errors) {\n      if (fb.get('Password').value !== confirmPasswordsCtrl.value) {\n        confirmPasswordsCtrl.setErrors({passwordMismatch: true});\n      } else {\n        confirmPasswordsCtrl.setErrors(null);\n      }\n    }\n  }\n  changePassword() {\n\n    const body = {\n      CurrentPassword: this.formPasswordModel.value.CurrentPassword,\n      Password: this.formPasswordModel.value.Passwords.Password,\n      ConfirmPassword: this.formPasswordModel.value.Passwords.ConfirmPassword\n    };\n\n    return this.http.post(this.BaseURI + '/AppUser/ChangePassword', body);\n\n  }\n  register() {\n    const body = {\n      UserName: this.formModel.value.UserName,\n      FirstName: this.formModel.value.FirstName,\n      Password: this.formModel.value.Passwords.Password\n    };\n    return this.http.post(this.BaseURI + '/User/Register', body);\n  }\n\n  login(formData: any) {\n    return this.http.post(this.BaseURI + '/User/Login', formData);\n  }\n\n  setCurrentUser(user: any){\n  localStorage.setItem('currentUser', JSON.stringify(user));\n  localStorage.setItem('token', user.Token);\n  }\n\n  getCurrentUser(){ \n  return JSON.parse(localStorage.getItem('currentUser'));\n  }\n\n  getUserToken() {\n    return localStorage.getItem('token');\n  }\n\n  removeCurrentUser() { \n  localStorage.removeItem('currentUser');\n  localStorage.removeItem('token');\n\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<img src=\\\"/assets/img/add_user.png\\\" class=\\\"mx-auto d-block\\\" style=\\\"height: 150px;\\\">\\n<form #form='ngForm' class=\\\"mb-4\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form, UserName.value)\\\">\\n<div class=\\\"form-group\\\">  \\n  <label>User name:</label>\\n  <input class=\\\"form-control\\\" #UserName=\\\"ngModel\\\" name=\\\"UserName\\\" [(ngModel)]=\\\"formModel.UserName\\\" required> \\n</div>\\n<div class=\\\"form-group\\\">  \\n  <label>Password:</label>\\n  <input type=\\\"password\\\" class=\\\"form-control\\\" #Password=\\\"ngModel\\\" name=\\\"Password\\\" [(ngModel)]=\\\"formModel.Password\\\" required> \\n</div>\\n<div class=\\\"form-row\\\">\\n  <div class=\\\"form-group col-md-8 offset-md-2\\\"> \\n    <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block\\\" [disabled]=\\\"!form.valid\\\">Sign In</button>\\n  </div>\\n</div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserService } from 'src/app/shared/user-service.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  formModel = {\n    UserName: '',\n    Password: ''\n  };\n  constructor(private userService: UserService, private router: Router, private toastr: ToastrService) { }\n\n  ngOnInit() {\n    if (localStorage.getItem('token') != null) {\n      this.router.navigateByUrl('/home');\n    }\n    }\n\n  onSubmit(form: NgForm, userName: string) {\n    this.userService.login(form.value).subscribe(\n      (res: any) => {\n        console.log(res);\n        this.router.navigateByUrl('/home');\n        this.userService.setCurrentUser(res);\n        this.router.navigateByUrl('/home');\n        this.toastr.success('Welcome ' + userName + '!' , 'Authentication granted');\n      },\n      (err: any) => {\n        if (err.status === 400) {\n          this.toastr.error('Incorrect User name of Password!', 'Authentication failed');\n          form.reset();\n        } else {\n          this.toastr.error('Our servers is down at the moment', 'Try again later');\n          form.reset();\n        }\n      }\n    );\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n  <form [formGroup]=\\\"service.formModel\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group required\\\" >  \\n      <label>User Name:</label>\\n      <input class=\\\"form-control\\\" formControlName=\\\"UserName\\\">\\n      <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('UserName').touched &&\\n      service.formModel.get('UserName').errors?.required\\\">This field is required!</label>\\n    </div>\\n    <div class=\\\"form-group required\\\" >  \\n      <label>First Name:</label>\\n      <input class=\\\"form-control\\\" formControlName=\\\"FirstName\\\">\\n      <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('FirstName').touched &&\\n      service.formModel.get('FirstName').errors?.required\\\">This field is required!</label>\\n    </div>\\n        <div formGroupName=\\\"Passwords\\\">\\n    <div class=\\\"form-group required\\\" >  \\n            <label>Password:</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"Password\\\">\\n            <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Passwords.Password').touched &&\\n      service.formModel.get('Passwords.Password').errors?.required\\\">This field is required!</label>\\n      <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Passwords.Password').touched &&\\n      service.formModel.get('Passwords.Password').errors?.minLength\\\">Minimum 4 character required!</label>\\n          </div>\\n          <div class=\\\"form-group required\\\" >  \\n              <label>Confirm Password:</label>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"ConfirmPassword\\\">\\n              <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Passwords.ConfirmPassword').touched &&\\n              service.formModel.get('Passwords.ConfirmPassword').errors?.required\\\">This field is required!</label>\\n              <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Passwords.ConfirmPassword').touched &&\\n              service.formModel.get('Passwords.ConfirmPassword').errors?.passwordMismatch\\\">Passwords does not match!</label>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-8 offset-md-2\\\"> \\n              <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block\\\" [disabled]=\\\"!service.formModel.valid\\\">Register</button>\\n            </div>\\n          </div>\\n  </form>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserService } from 'src/app/shared/user-service.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private service: UserService, private toastr: ToastrService, private router: Router) { }\n\n  ngOnInit() {\n    this.service.formModel.reset();\n  }\n\n  onSubmit() {\n    try {\n    this.service.register().subscribe(\n      (result: any) => {\n        if (result.UserName) {\n          this.service.formModel.reset();\n          this.toastr.success('New user created! you can now log in', 'Register Process Successful');\n          this.router.navigateByUrl('/user/login');\n        } else {\n          this.toastr.error('User Name is already taken!', 'Register Process failed');\n        }\n      },\n      err => {\n        this.toastr.error(err.Description, 'Register failed, Server is down at the moment');\n      }\n    );\n    }\n    catch (e) { \n      this.toastr.error(e, 'Register failed, Server is down at the moment');\n      console.log(e);\n    }\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"wrapped-div\\\"> \\n    <div class=\\\"tab-header\\\">  \\n      <h2  routerLink='/user/login' routerLinkActive='active'>Sign In</h2>\\n      <h2  routerLink='/user/register' routerLinkActive='active'>Sign Up</h2>\\n    </div>\\n    <div class=\\\"row\\\"> \\n      <div class=\\\"col-md-10 offset-md-1\\\"> \\n        <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiEndpoint:'https://localhost:44354/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}